{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat/chat.component.css","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/chat/message/message.component.css","webpack:///./src/app/components/chat/message/messageButton.component.html","webpack:///./src/app/components/chat/message/messageButton.component.ts","webpack:///./src/app/components/chat/message/messageQuickReply.component.html","webpack:///./src/app/components/chat/message/messageQuickReply.component.ts","webpack:///./src/app/components/chat/message/messageText.component.html","webpack:///./src/app/components/chat/message/messageText.component.ts","webpack:///./src/app/components/diary/diary.component.css","webpack:///./src/app/components/diary/diary.component.html","webpack:///./src/app/components/diary/diary.component.ts","webpack:///./src/app/model/messageText.ts","webpack:///./src/app/services/diary.service.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DiaryComponent} from './components/diary/diary.component'\nimport { ChatComponent } from './components/chat/chat.component'\n\n\nconst routes: Routes = [\n  { path: '', component: ChatComponent, pathMatch: 'full' },\n  {\n    path: 'diary',\n    component: DiaryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Moi\\n  </h1>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private title = 'portfolio ui - chat';\n}\n","\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { SocketService } from './services/socket.service';\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { DiaryService } from './services/diary.service';\nimport { DiaryComponent } from './components/diary/diary.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { MessageTextComponent } from './components/chat/message/messageText.component';\nimport { MessageButtonComponent } from './components/chat/message/messageButton.component';\nimport { MessageQuickReplyComponent } from './components/chat/message/messageQuickReply.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DiaryComponent,\n    ChatComponent,\n    MessageTextComponent,\n    MessageButtonComponent,\n    MessageQuickReplyComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ToastrModule.forRoot({ timeOut: 3000 }),\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    DiaryService,\n    SocketService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>Test chat RECAST AI / SAP Conversational AI</h2>\\n<ul>\\n    <ng-container *ngFor=\\\"let message of messages\\\">\\n      <app-chat-message-text *ngIf=\\\"message.type=='text'\\\" [message]=\\\"message\\\"></app-chat-message-text>\\n      <app-chat-message-button *ngIf=\\\"message.type=='buttons'\\\" [message]=\\\"message\\\"></app-chat-message-button>\\n      <app-chat-message-quick-reply *ngIf=\\\"message.type=='quickReplies'\\\" [message]=\\\"message\\\"></app-chat-message-quick-reply>\\n    </ng-container>\\n</ul>\\n  <form [formGroup]=\\\"messageForm\\\" (submit)=\\\"sendMessage()\\\">\\n  <p>Message: </p>\\n  <input type=\\\"text\\\" formControlName=\\\"content\\\" name=\\\"content\\\" placeholder=\\\"Message\\\">\\n  <input type=\\\"submit\\\" value=\\\"Send using socket subscription\\\">\\n</form>\\n\"","  import { Component, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy } from '@angular/core';\n  import { FormGroup, FormControl, Validators } from '@angular/forms';\n  import { ToastrService } from 'ngx-toastr';\n\n  import { SocketService } from '../../services/socket.service';\n  import { Message } from '../../model/message';\n\n  @Component({\n    selector: 'app-chat',\n    templateUrl: './chat.component.html',\n    styleUrls: ['./chat.component.css']\n  })\n  export class ChatComponent implements OnInit {\n\n    isLoaded: boolean = false;\n    isCustomSocketOpened = false;\n    messageForm: FormGroup;\n    messages: Message[] = [];\n\n    constructor(private socketService: SocketService, private componentFactoryResolver: ComponentFactoryResolver) { }\n\n    ngOnInit() {\n      this.messageForm = new FormGroup({content: new FormControl(null, [Validators.required])});\n      this.getMessages();\n    }\n\n    sendMessage() {\n      if (this.messageForm.valid) {\n        this.socketService.sendMessageUsingSocket(this.messageForm.value.content);\n      }\n    }\n\n    getMessages(): void {\n      this.socketService.getMessages()\n          .subscribe(messages => this.messages = messages);\n    }\n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdC9tZXNzYWdlL21lc3NhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<li class=\\\"message message-button\\\">\\r\\n    <h3>{{message.content.title}}</h3>\\r\\n    <ul class=\\\"button-group\\\">\\r\\n        <li *ngFor=\\\"let button of message.content.buttons\\\">\\r\\n            <button (click)=\\\"quickReply(button.value)\\\" type=\\\"button\\\">{{ button.title }}</button> \\r\\n        </li>\\r\\n    </ul>\\r\\n</li>\\r\\n\\r\\n\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Message } from '../../../model/message';\r\nimport { SocketService } from '../../../services/socket.service'\r\n\r\n@Component({\r\n  selector: 'app-chat-message-button',\r\n  templateUrl: './messageButton.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\nexport class MessageButtonComponent{\r\n\r\n  @Input() message: Message;\r\n  \r\n  constructor(private socketService: SocketService) { }\r\n\r\n  quickReply(message:string){\r\n    this.socketService.sendMessageUsingSocket(message);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<li class=\\\"message message-button\\\">\\r\\n\\t<h3>{{message.content.title}}</h3>\\r\\n\\t<ul class=\\\"button-group\\\">\\r\\n\\t<li *ngFor=\\\"let button of message.content.buttons\\\">\\r\\n\\t\\t<button (click)=\\\"quickReply(button.value)\\\" type=\\\"button\\\">{{ button.title }}</button> \\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n</li>\\r\\n\\t\\r\\n\\t\\r\\n\\t\"","import { Component, Input } from '@angular/core';\r\nimport { Message } from '../../../model/message';\r\n\r\nimport { SocketService } from '../../../services/socket.service'\r\n\r\n@Component({\r\n  selector: 'app-chat-message-quick-reply',\r\n  templateUrl: './messageQuickReply.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\nexport class MessageQuickReplyComponent{\r\n\r\n  @Input() message: Message;\r\n  \r\n  constructor(private socketService: SocketService) { }\r\n\r\n  \r\n  quickReply(message:string){\r\n    this.socketService.sendMessageUsingSocket(message);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<li ngClass=\\\"{}\\\">Text Type: {{message.type}} - Content {{message.content}}</li>\\n\\n\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Message } from '../../../model/message';\r\n\r\n@Component({\r\n  selector: 'app-chat-message-text',\r\n  templateUrl: './messageText.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\nexport class MessageTextComponent{\r\n\r\n  @Input() message: Message;\r\n  \r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhcnkvZGlhcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"diary works!\\n<div *ngFor=\\\"let release of releases\\\">\\n  {{ release }}\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DiaryService } from '../../services/diary.service';\n\n@Component({\n  selector: 'app-diary',\n  templateUrl: './diary.component.html',\n  styleUrls: ['./diary.component.css']\n})\nexport class DiaryComponent implements OnInit {\n\n  public releases;\n\n  constructor( private diaryService : DiaryService) { }\n\n  ngOnInit() {\n    console.info(\"init\");\n    //this.getReleases();\n  }\n\n  getReleases(){\n    this.diaryService.getReleases().subscribe(\n       data => {this.releases = data},\n       err => console.error(err),\n       () => console.log('releases loaded')\n    );\n  }\n\n}\n","import { Message } from './message';\r\n\r\n\r\nexport class MessageText implements Message {\r\n    type: string = \"text\";\r\n    content: string;\r\n    fromId: string;\r\n    toId: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-type':'application/json'})\n} ;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiaryService {\n\n  constructor(private http:HttpClient) { }\n\n  getReleases(){\n    return this.http.get('server/api/v1/github/service/releases');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Message } from '../model/message';\nimport { MessageText } from '../model/messageText';\nimport { MessageButton } from '../model/messageButton';\nimport { MessageQuickReply } from '../model/messageQuickReply';\n\nimport { Stomp } from \"@stomp/stompjs\"\nimport * as SockJS from 'sockjs-client';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({ providedIn: 'root'})\nexport class SocketService {\n  serverUrl = environment.url + 'socket';\n  url: string = environment.url + \"api/v1/socket\";\n  fromId: string = \"123\";\n  isLoaded: boolean = false;\n  isCustomSocketOpened = false;\n  private stompClient;\n  messages: Message[] = [];\n\n  constructor(private http: HttpClient) {\n    console.log(\"Connection to socket \"+environment.url+\"socket\");\n    let ws = new SockJS(this.serverUrl);\n    this.stompClient = Stomp.over(ws);\n    let that = this;\n    this.stompClient.connect({}, \n      function (frame) {\n        console.log(\"Connected\");\n        that.isLoaded = true;\n        that.openGlobalSocket();\n        that.openPrivateSocket();\n      },\n      function(){\n        console.log(\"error\");\n      });\n  }\n\n  post(data: Message) {\n    return this.http.post(this.url, data);\n  }\n\n  getMessages(): Observable<Message[]> {\n    return of(this.messages)\n  }\n\n\n  sendMessageUsingSocket(content: string) {\n    let message: MessageText = new MessageText();\n    message.content = content;\n    message.fromId = this.fromId;\n    this.stompClient.send(\"/socket-subscriber/send/message\", {}, JSON.stringify(message));  \n  }\n\n\n  private openGlobalSocket() {\n    this.stompClient.subscribe(\"/socket-publisher\", (message) => {\n      this.handleResult(message);\n    });\n  }\n\n  private openPrivateSocket() {\n    if (this.isLoaded) {\n      this.isCustomSocketOpened = true;\n      this.stompClient.subscribe(\"/socket-publisher/\"+this.fromId, (message) => {\n        this.handleResult(message);\n      });\n    }\n  }\n\n  private handleResult(response){\n    console.log(response)\n    if (response.body) {\n      let message: Message = JSON.parse(response.body);\n      switch(message.type){\n        case \"text\":\n          let messageText: MessageText = message\n          this.messages.push(messageText)\n          break;\n        case \"buttons\":\n          let messageButtons: MessageButton = message;\n          this.messages.push(messageButtons);\n          break;\n        case \"quickReplies\":\n          let messageQuickReply: MessageQuickReply = message;\n          this.messages.push(messageQuickReply);\n          break;\n        default :\n          let defaultMessage: MessageText = new MessageText();\n          defaultMessage.content = \"error\";\n          this.messages.push(defaultMessage);\n          break;\n      }\n    }\n  }\n\n\n\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: \"http://localhost:5000/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}